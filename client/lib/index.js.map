{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import { spawnSync } from 'child_process';\nimport { connect } from 'net';\nimport { networkInterfaces } from 'os';\nconst argv = require('minimist')(process.argv.slice(2));\n\nconst port = argv.port || 3007;\nconst host = argv.host || 'localhost';\nconst script = '/home/pi/screen.sh';\n\nconst mac = (() => {\n    const interfaces = networkInterfaces();\n    return (interfaces.wlan0 || interfaces.eth0 || interfaces.en0)[0].mac;\n})();\n\nlet client;\n\n(function openSocket() {\n    if (client) {\n        return;\n    }\n\n    let pingInterval;\n    client = connect(port, host, () => {\n        client.write('mac: ' + mac);\n        pingInterval = setInterval(() => client.write('ping'), 10000);\n    });\n\n    client.setKeepAlive(true);\n    client.on('error', (err) => {\n        console.log(err.message);\n\n        if (pingInterval) {\n            clearInterval(pingInterval);\n        }\n\n        client.destroy();\n        client = null;\n        setTimeout(() => openSocket(), 1000);\n    });\n\n    client.on('end', () => {\n        console.log('ended connection by server');\n        client = null;\n\n        if (pingInterval) {\n            clearInterval(pingInterval);\n        }\n\n        setTimeout(() => openSocket(), 1000);\n    });\n\n    client.on('data', function(data) {\n        const string = data.toString();\n        console.log('data', string);\n\n        const [instruction, value] = string.split(': ');\n\n        switch (instruction) {\n            case 'pong':\n                break;\n\n            case 'url':\n            case 'change-url':\n                value = value.trim();\n\n                try {\n                    spawnSync(script, ['reload', url]);\n                } catch (err) {\n                    console.log(err.message);\n                }\n\n                break;\n\n            case 'refresh':\n                console.log('refresh !');\n\n                try {\n                    spawnSync(script, ['refresh']);\n                } catch (err) {\n                    console.log(err.message);\n                }\n\n                break;\n\n            default:\n                console.log('unsupported instruction: ' + instruction);\n                break;\n        }\n    });\n})();\n"]}