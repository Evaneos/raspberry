{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import { spawnSync } from 'child_process';\nimport { connect } from 'net';\nimport { networkInterfaces } from 'os';\nimport { ConsoleLogger } from 'nightingale';\n\nconst argv = require('minimist')(process.argv.slice(2));\nconst logger = new ConsoleLogger('server');\n\nconst port = argv.port || 3007;\nconst host = argv.host || 'localhost';\nconst script = '/home/pi/screen.sh';\n\nconst netInterface = () => {\n    const interfaces = networkInterfaces();\n    for (let key of Object.keys(interfaces)) {\n        let netInterface = interfaces[key];\n        let filtered = netInterface.filter(item => item.family === 'IPv4');\n\n        if (filtered.length !== 0) {\n            netInterface = filtered;\n        }\n\n        for (let item of netInterface) {\n            if (!item.mac || !item.address) {\n                continue;\n            }\n\n            if (item.mac === '00:00:00:00:00:00') {\n                continue;\n            }\n\n            if (item.address === '127.0.0.1' || item.address === '::1') {\n                continue;\n            }\n\n            return {\n                mac: item.mac,\n                ip: item.address,\n            };\n        }\n    }\n\n    throw new Error('Could not find valid mac/ip');\n};\n\nlet client;\n\n(function openSocket() {\n    if (client) {\n        return;\n    }\n\n    let pingInterval;\n    logger.info(`connect to ${host}:${port}`);\n    client = connect(port, host, () => {\n        const interfaceInfo = netInterface();\n        logger.info(interfaceInfo);\n        client.write(`hello: ${interfaceInfo.mac},${interfaceInfo.ip};`);\n        pingInterval = setInterval(() => client.write('ping;'), 10000);\n    });\n\n    client.setKeepAlive(true);\n    client.on('error', (err) => {\n        logger.error(err.message);\n\n        if (pingInterval) {\n            clearInterval(pingInterval);\n        }\n\n        client.destroy();\n        client = null;\n        setTimeout(() => openSocket(), 1000);\n    });\n\n    client.on('end', () => {\n        logger.info('ended connection by server');\n        client = null;\n\n        if (pingInterval) {\n            clearInterval(pingInterval);\n        }\n\n        setTimeout(() => openSocket(), 1000);\n    });\n\n    client.on('data', function(data) {\n        const string = data.toString();\n        logger.debug('data', { string });\n\n        string.split(';').forEach((string) => {\n            if (string === '') {\n                return;\n            }\n\n            const [instruction, value] = string.split(': ');\n\n            switch (instruction) {\n                case 'pong':\n                    break;\n\n                case 'url':\n                case 'change-url':\n                    const url = value.trim();\n\n                    try {\n                        logger.info('reload', { url });\n                        spawnSync(script, ['reload', url], { stdio: 'inherit' });\n                        logger.info('reload done');\n                    } catch (err) {\n                        logger.error(err.message);\n                    }\n\n                    break;\n\n                case 'refresh':\n                    try {\n                        logger.info('refresh');\n                        spawnSync(script, ['refresh'], { stdio: 'inherit' });\n                        logger.info('refresh done');\n                    } catch (err) {\n                        logger.error(err.message);\n                    }\n\n                    break;\n\n                default:\n                    logger.warn('unsupported instruction', { instruction });\n                    break;\n            }\n        });\n    });\n})();\n"]}