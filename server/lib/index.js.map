{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import { createServer, connect } from 'net';\nconst argv = require('minimist')(process.argv.slice(2));\n\nconst serverClients = new Map();\nlet client;\n\nconst server = createServer(socket => {\n    console.log('client connected');\n    let mac;\n\n    socket.on('end', function() {\n        console.log('client disconnected');\n        if (mac && serverClients.get(mac) === socket) {\n            serverClients.delete(mac);\n        }\n\n        if (mac && client) {\n            client.write('disconnected: ' + mac + ';');\n        }\n    });\n\n    socket.on('data', function(data) {\n        const string = data.toString();\n        console.log('data', string);\n\n        const splittedString = string.split(': ');\n\n        if (splittedString.length !== 2) {\n            console.log('unexpected format, length = ' + splittedString.length);\n            return socket.end();\n        }\n\n        const [instruction, value] = splittedString;\n\n        switch (instruction) {\n            case 'ping':\n                socket.write('pong: ');\n                break;\n\n            case 'mac':\n                mac = value;\n                serverClients.set(mac, socket);\n\n                if (client) {\n                    client.write('connected: ' + mac + ';');\n                }\n\n                break;\n\n            default:\n                console.log('unsupported instruction by client ' + mac);\n                return socket.end();\n        }\n    });\n});\n\nserver.listen(argv.port || 3007);\n\n(function openSocket() {\n    client = connect(argv.socketWebserver || __dirname + '/../../socket-webserver', () => {\n        console.log('connected to web server');\n        const keys = [];\n        for (let key of serverClients.keys()) {\n            keys.push(key);\n        }\n\n        client.write('connected-clients: ' + keys.join(',') + ';');\n    });\n\n    client.setKeepAlive(true);\n    client.on('error', (err) => {\n        client = null;\n        console.log(err.message);\n\n        setTimeout(() => openSocket(), 1000);\n    });\n\n    client.on('data', function(data) {\n        const string = data.toString();\n        console.log('data', string);\n\n        const [instruction, value] = string.split(': ');\n\n        switch (instruction) {\n            case 'pong':\n                break;\n\n            case 'refresh':\n                const socket = serverClients.get(value);\n                socket.write('refresh');\n                break;\n\n            default:\n                console.log('unsupported instruction: ' + instruction);\n                break;\n        }\n    });\n})();\n"]}